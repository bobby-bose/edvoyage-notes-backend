# Generated by Django 5.2.6 on 2025-09-13 14:41

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Flashcard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, help_text="Optional: A brief description or the 'back' of the main card.")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcards', to='api.category')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcards', to='api.subject')),
            ],
        ),
        migrations.CreateModel(
            name='FlashcardImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='flashcards/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('flashcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='api.flashcard')),
            ],
        ),
        migrations.CreateModel(
            name='MCQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('is_free', models.BooleanField(default=False)),
                ('logo', models.ImageField(upload_to='mcq_logos/')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcqs', to='api.category')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcqs', to='api.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='The text of the question.')),
                ('mcq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='api.mcq')),
            ],
        ),
        migrations.CreateModel(
            name='ClinicalCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_title', models.CharField(help_text="Enter the title for this clinical case, e.g., 'Cardiovascular Examination of Patient X'.", max_length=255)),
                ('gather_equipments', models.TextField(help_text='List all necessary equipment for the examination.', verbose_name='Gather Equipments')),
                ('introduction', models.TextField(help_text='Describe the introduction to the patient, including consent.', verbose_name='Introduction')),
                ('general_inspection', models.TextField(help_text='Detail the findings from the general inspection of the patient.', verbose_name='General Inspection')),
                ('closer_inspection', models.TextField(help_text='Detail the findings from a closer, more focused inspection.', verbose_name='Closer Inspection')),
                ('palpation', models.TextField(help_text='Record the findings from palpation.', verbose_name='Palpation')),
                ('final_examination', models.TextField(help_text='Describe any final examination steps, like auscultation or percussion.', verbose_name='Final Examination')),
                ('references', models.TextField(blank=True, help_text='List any references or sources cited.', null=True, verbose_name='References')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='api.category')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='api.doctor')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='api.subject')),
            ],
            options={
                'verbose_name': 'Clinical Case',
                'verbose_name_plural': 'Clinical Cases',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('video_url', models.URLField()),
                ('duration_in_minutes', models.PositiveIntegerField()),
                ('is_free', models.BooleanField(default=False)),
                ('logo', models.ImageField(upload_to='video_logos/')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='api.category')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos', to='api.doctor')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='api.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='The text for this answer option.', max_length=255)),
                ('is_correct', models.BooleanField(default=False, help_text='Mark this if it is the correct answer.')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='api.question')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_correct', True)), fields=('question', 'is_correct'), name='unique_correct_option_for_question')],
            },
        ),
    ]
